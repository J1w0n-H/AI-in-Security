[project]
name = "camel"
version = "1.0.0"
description = "CaMeL is a defense for prompt injection attacks."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "agentdojo>=0.1.34",
    "anthropic>=0.51.0",
    "cyclopts>=3.16.1",
    "pydantic-ai>=0.2.4",
    "pydantic>=2.11.4",
    "tiktoken>=0.9.0",
    "google-genai>=1.15.0",
    "openai>=1.78.1",
    "vertexai>=1.71.1",
    "jsonref>=1.1.0",
    "openapi-pydantic>=0.5.1",
]

[project.scripts]
capybility-learning = "camel:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "ipython>=8.31.0",
    "jupyterlab>=4.3.4",
    "matplotlib>=3.10.0",
    "pandas>=2.2.3",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.3",
    "ruff>=0.11.9",
    "pyright>=1.1.400",
    "seaborn>=0.13.2",
    "statsmodels>=0.14.4",
]

[tool.ruff]
indent-width = 4
line-length = 120

[tool.ruff.lint]
select = [
    "F",   # pyflakes
    "UP",  # pyupgrade
    "I",   # isort
    "NPY", # numpy
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "RUF",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
property-decorators = [
    "abc.abstractproperty",
    "cached_property.cached_property",
    "cached_property.threaded_cached_property",
    "cached_property.cached_property_with_ttl",
    "cached_property.threaded_cached_property_with_ttl",
]

[tool.ruff.lint.per-file-ignores]
# Ignore all directories named `tests`.
"tests/**" = ["D"]
# Ignore all files that end in `_test.py`.
"*_test.py" = ["D"]

[tool.pyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.10"
line-length = 120

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.run]
omit = [
    "*/__init__.py", # Exclude all __init__.py files
    "tests/*",       # Exclude all files within the tests directory
    "main.py",       # Exclude running script
]
